{% style %}

.master-container {
  width: 100%;
  margin: 0 auto;
}

.collection-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
  grid-gap: 16px;
  justify-content: center;
}

.collection-item {
  display: flex;
  flex-direction: column; /* Stack child elements vertically */
  align-items: stretch; /* Ensure items stretch to full height */
  outline: 1px solid #ddd;
  border-radius: 8px;
  overflow: hidden;
  position: relative; 
}
.buy-now-button {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 12px; /* Adjust padding as needed */
  color: white; /* Example text color */
  text-align: center;
}

.product {
  flex:1;
  text-align: center;
  padding:16px;
}

.product h3 {
  margin: 8px 0;
}

.product img {
  width: 100%;
  height: auto;
  object-fit: cover;
}

.product select,
.product input[type="text"],
.product input[type="submit"] {
  width: 100%;
  margin-top: 8px;
}

/* Add media queries for responsiveness */

@media screen and (min-width: 768px) {
  .collection-container {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  }
}

@media screen and (min-width: 1024px) {
  .collection-container {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  }
}

{% endstyle %}

<div class="master-container">
  {% paginate collection.products by 50 %}
    <h1>{{ collection.title }}</h1>
    <select id="sort-by">
      {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
      {% for option in collection.sort_options %}
        <option
          value="{{ option.value }}"
          {% if option.value == sort_by %}
          selected="selected"
          {% endif %}>
          {{ option.name }}
        </option>
      {% endfor %}

    </select>
    <div class="collection-container">
      {% for product in collection.products %}
        <div class="collection-item">
          <div class="product">
            <a href="{{ product.url }}">
              <h3>
                {{ product.title | link_to: product.url }}</h3>
              <div class="product-image">
                {{ product.featured_image | image_url: width: 500 | image_tag }}
              </div>
             
              {{ product.price | money }}
            </a>
            {% form 'product'
              , product %}
              <a> 
              <input type="submit" value="Add to cart">
              </a>
              <input
                type="text"
                name="quantity"
                min="1">
              <div class="buy-now-button">
                {{ form | payment_button }}
              </div>
            
              <select name="id">
                {% for variant in product.variants %}
                  <option
                    value="{{ variant.id }}"
                    {% if variant == product.selected_or_first_available_variant %}
                    selected="selected"
                    {% endif %}>
                    {{ variant.title }} - {{ variant.price | money }}
                  </option>
                {% endfor %}
              </select>
            
            {% endform %}

            </a>
          </div>
        </div>
      {% endfor %}
    </div>

    {{ paginate | default_pagination }}
  {% endpaginate %}
</div>


<script>
  Shopify.queryParams = {};

  // Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  // Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function(e) {
    var value = e.target.value;

    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>